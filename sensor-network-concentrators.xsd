<?xml version='1.0' encoding='UTF-8'?>
<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:iot:concentrators'
    xmlns='urn:xmpp:iot:concentrators'
    xmlns:sn='urn:xmpp:iot:sensordata'
    xmlns:xd="jabber:x:data"
    xmlns:xdv="http://jabber.org/protocol/xdata-validate"
    xmlns:xdl="http://jabber.org/protocol/xdata-layout"
    elementFormDefault='qualified'>
 
    <xs:import namespace='urn:xmpp:iot:sensordata'/>
    <xs:import namespace='jabber:x:data'/>
    <xs:import namespace='http://jabber.org/protocol/xdata-validate'/>
    <xs:import namespace='http://jabber.org/protocol/xdata-layout'/>
 
    <xs:element name='getCapabilities' type='TokenRequest'/>
    <xs:element name='getCapabilitiesResponse' type='StringArrayResponse'/>
 
    <xs:element name='getAllDataSources' type='TokenRequest'/>
    <xs:element name='getAllDataSourcesResponse' type='DataSourceArrayResponse'/>
 
    <xs:element name='getRootDataSources' type='TokenRequest'/>
    <xs:element name='getRootDataSourcesResponse' type='DataSourceArrayResponse'/>
 
    <xs:element name='getChildDataSources' type='SourceReferenceRequest'/>
    <xs:element name='getChildDataSourcesResponse' type='DataSourceArrayResponse'/>
 
    <xs:element name='containsNode' type='NodeReferenceRequest'/>
    <xs:element name='containsNodeResponse'>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base='xs:boolean'>
                    <xs:attributeGroup ref='responseCode'/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
 
    <xs:element name='containsNodes' type='NodeReferencesRequest'/>
    <xs:element name='containsNodesResponse' type='BooleanArrayResponse'/>
 
    <xs:element name='getNode' type='NodeReferenceParametersRequest'/>
    <xs:element name='getNodeResponse'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeInformation'>
                    <xs:attributeGroup ref='responseCode'/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
 
    <xs:element name='getNodes' type='NodeReferenceParametersRequest'/>
    <xs:element name='getNodesResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getAllNodes' type='GetAllNodesRequest'/>
    <xs:element name='getAllNodesResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getNodeInheritance' type='NodeReferenceRequest'/>
    <xs:element name='getNodeInheritanceResponse'>
        <xs:complexType>
            <xs:sequence>
                <xs:element name='baseClasses' type='StringArray' minOccurs='1' maxOccurs='1'/>
                <xs:element name='interfaces' type='StringArray' minOccurs='0' maxOccurs='1'/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
 
    <xs:element name='getRootNodes' type='SourceReferenceParametersRequest'/>
    <xs:element name='getRootNodesResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getChildNodes' type='GetChildNodesRequest'/>
    <xs:element name='getChildNodesResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getIndices' type='SourceReferenceRequest'/>
    <xs:element name='getIndicesResponse' type='StringArrayResponse'/>
 
    <xs:element name='getNodesFromIndex' type='IndexReferenceRequest'/>
    <xs:element name='getNodesFromIndexResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getNodesFromIndices' type='IndexReferencesRequest'/>
    <xs:element name='getNodesFromIndicesResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getAllIndexValues'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='SourceReferenceRequest'>
                    <xs:attribute name='index' type='xs:string' use='required'/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='getAllIndexValuesResponse' type='StringArrayResponse'/>
 
    <xs:element name='getNodeParametersForEdit' type='NodeReferenceRequest'/>
    <xs:element name='getNodeParametersForEditResponse' type='ParameterFormResponse'/>
 
    <xs:element name='setNodeParametersAfterEdit'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeReferenceRequest'>
                    <xs:sequence>
						<xs:element ref='xd:x' minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='setNodeParametersAfterEditResponse' type='SetNodeParametersResponse'/>
 
    <xs:element name='getCommonNodeParametersForEdit' type='NodeReferencesRequest'/>
    <xs:element name='getCommonNodeParametersForEditResponse' type='ParameterFormResponse'/>
 
    <xs:element name='setCommonNodeParametersAfterEdit'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeReferencesRequest'>
                    <xs:sequence>
						<xs:element ref='xd:x' minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='setCommonNodeParametersAfterEditResponse' type='SetNodeParametersResponse'/>
 
    <xs:element name='getAddableNodeTypes' type='NodeReferenceRequest'/>
    <xs:element name='getAddableNodeTypesResponse'>
        <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                <xs:element name='nodeType'>
                    <xs:complexType>
                        <xs:attribute name='type' type='xs:string' use='required'/>
                        <xs:attribute name='name' type='xs:string' use='required'/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
 
    <xs:element name='getParametersForNewNode' type='NodeTypeReferenceRequest'/>
    <xs:element name='getParametersForNewNodeResponse' type='ParameterFormResponse'/>
 
    <xs:element name='createNewNode'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeTypeReferenceRequest'>
                    <xs:sequence>
						<xs:element ref='xd:x' minOccurs="1" maxOccurs="1"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='createNewNodeResponse' type='SetNodeParametersResponse'/>
 
    <xs:element name='destroyNode' type='NodeReferenceRequest'/>
    <xs:element name='destroyNodeResponse'>
        <xs:complexType>
            <xs:attributeGroup ref='responseCode'/>
        </xs:complexType>
    </xs:element>
 
    <xs:element name='getAncestors' type='NodeReferenceParametersRequest'/>
    <xs:element name='getAncestorsResponse' type='NodeInformationArrayResponse'/>
 
    <xs:element name='getNodeCommands' type='NodeReferenceRequest'/>
    <xs:element name='getNodeCommandsResponse' type='CommandArray'/>
 
    <xs:element name='getCommandParameters' type='NodeCommandReferenceRequest'/>
    <xs:element name='getCommandParametersResponse' type='ParameterFormResponse'/>
 
    <xs:element name='executeNodeCommand'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeCommandReferenceRequest'>
                    <xs:sequence>
						<xs:element ref='xd:x' minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
				</xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='executeNodeCommandResponse' type='ExecuteNodeCommandResponse'/>
 
	<xs:element name='executeNodeQuery'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeCommandReferenceRequest'>
					<xs:sequence>
						<xs:element ref='xd:x' minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='executeNodeQueryResponse'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='ExecuteNodeCommandResponse'>
					<xs:attribute name="queryId" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='getCommonNodeCommands' type='NodeReferencesRequest'/>
    <xs:element name='getCommonNodeCommandsResponse' type='CommandArray'/>
     
    <xs:element name='getCommonCommandParameters'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeReferencesRequest'>
                    <xs:attribute name='command' type='xs:string' use='required'/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='getCommonCommandParametersResponse' type='ParameterFormResponse'/>
 
    <xs:element name='executeCommonNodeCommand'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeReferencesRequest'>
                    <xs:sequence>
						<xs:element ref='xd:x' minOccurs="0" maxOccurs="1"/>
                    </xs:sequence>
					<xs:attribute name="queryId" type="xs:string" use="optional"/>
				</xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='executeCommonNodeCommandResponse' type='ExecuteCommonNodeCommandResponse'/>
 
	<xs:element name='executeCommonNodeQuery'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeReferencesRequest'>
					<xs:sequence>
						<xs:element ref='xd:x' minOccurs="0" maxOccurs="1"/>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='executeCommonNodeQueryResponse'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='ExecuteCommonNodeCommandResponse'>
					<xs:attribute name="queryId" type="xs:string" use="optional"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='moveNodeUp' type='NodeReferenceRequest'/>
    <xs:element name='moveNodeUpResponse' type='Response'/>
 
    <xs:element name='moveNodeDown' type='NodeReferenceRequest'/>
    <xs:element name='moveNodeDownResponse' type='Response'/>
 
    <xs:element name='moveNodesUp' type='NodeReferencesRequest'/>
    <xs:element name='moveNodesUpResponse' type='Response'/>
 
    <xs:element name='moveNodesDown' type='NodeReferencesRequest'/>
    <xs:element name='moveNodesDownResponse' type='Response'/>
 
	<xs:element name='subscribe'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='SourceReferenceRequest'>
                    <xs:attribute name='getEventsSince' type='xs:dateTime' use='optional'/>
					<xs:attributeGroup ref='parametersAndMessages'/>
					<xs:attributeGroup ref='eventTypes'/>
				</xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='subscribeResponse' type='Response'/>
 
    <xs:element name='unsubscribe'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='SourceReferenceRequest'>
					<xs:attributeGroup ref='eventTypes'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
    <xs:element name='unsubscribeResponse' type='Response'/>
 
	<xs:element name='nodeAdded'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeSourceInformation'>
					<xs:attribute name='afterNodeId' type='xs:string' use='optional'/>
					<xs:attribute name='afterNodeCacheType' type='xs:string' use='optional'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='nodeUpdated'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeSourceInformation'>
					<xs:attribute name='oldId' type='xs:string' use='optional'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='nodeStatusChanged'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeReference'>
					<xs:choice minOccurs='0' maxOccurs='unbounded'>
						<xs:element name='message' type='Message'/>
					</xs:choice>
					<xs:attribute name='state' type='NodeState' use='required'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='nodeRemoved' type='NodeReference'/>
	<xs:element name='nodeMovedUp' type='NodeReference'/>
	<xs:element name='nodeMovedDown' type='NodeReference'/>
 
	<xs:element name='getDatabases' type='TokenRequest'/>
	<xs:element name='getDatabasesResponse'>
		<xs:complexType>
			<xs:sequence minOccurs='0' maxOccurs='unbounded'>
				<xs:element name='database'>
					<xs:complexType>
						<xs:attribute name='databaseId' type='xs:string' use='required'/>
						<xs:attribute name='name' type='xs:string' use='optional'/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attributeGroup ref='responseCode'/>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='getDatabaseReadoutParameters' type='DatabaseReferenceRequest'/>
	<xs:element name='getDatabaseReadoutParametersResponse' type='ParameterFormResponse'/>
 
	<xs:element name='startDatabaseReadout'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='DatabaseReferenceRequest'>
					<xs:sequence>
						<xs:element name='node' type='NodeReference' minOccurs='1' maxOccurs='unbounded'/>
						<xs:element ref='xd:x' minOccurs="1" maxOccurs="1"/>
					</xs:sequence>
					<xs:attribute name="seqnr" type="xs:int" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='startDatabaseReadoutResponse' type='ExecuteNodeCommandResponse'/>
 
	<xs:element name='queryProgress'>
		<xs:complexType>
			<xs:choice minOccurs='1' maxOccurs='unbounded'>
				<xs:element name='queryStarted'>
					<xs:complexType/>
				</xs:element>
				<xs:element name='queryDone'>
					<xs:complexType/>
				</xs:element>
				<xs:element name='queryAborted'>
					<xs:complexType/>
				</xs:element>
				<xs:element name='newTable'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='unbounded'>
							<xs:element name='column'>
								<xs:complexType>
									<xs:attribute name='columnId' type='xs:string' use='required'/>
									<xs:attribute name='header' type='xs:string' use='optional'/>
									<xs:attribute name='dataSourceId' type='xs:string' use='optional'/>
									<xs:attribute name='cacheTypeName' type='xs:string' use='optional'/>
									<xs:attribute name='fgColor' type='Color' use='optional'/>
									<xs:attribute name='bgColor' type='Color' use='optional'/>
									<xs:attribute name='alignment' type='Alignment' use='optional'/>
									<xs:attribute name='nrDecimals' type='xs:nonNegativeInteger' use='optional'/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name='tableId' type='xs:string' use='required'/>
						<xs:attribute name='tableName' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='newRecords'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='unbounded'>
							<xs:element name='record'>
								<xs:complexType>
									<xs:choice minOccurs='0' maxOccurs='unbounded'>
										<xs:element name='boolean' type='xs:boolean'/>
										<xs:element name='color' type='Color'/>
										<xs:element name='date' type='xs:date'/>
										<xs:element name='dateTime' type='xs:dateTime'/>
										<xs:element name='double' type='xs:double'/>
										<xs:element name='duration' type='xs:duration'/>
										<xs:element name='int' type='xs:int'/>
										<xs:element name='long' type='xs:long'/>
										<xs:element name='string' type='xs:string'/>
										<xs:element name='time' type='xs:time'/>
										<xs:element name='base64'>
											<xs:complexType>
												<xs:simpleContent>
													<xs:extension base='xs:base64Binary'>
														<xs:attribute name='contentType' type='xs:string' use='required'/>
													</xs:extension>
												</xs:simpleContent>
											</xs:complexType>
										</xs:element>
										<xs:element name='void'>
											<xs:complexType/>
										</xs:element>
									</xs:choice>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name='tableId' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='tableDone'>
					<xs:complexType>
						<xs:attribute name='tableId' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='newObject'>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base='xs:base64Binary'>
								<xs:attribute name='contentType' type='xs:string' use='required'/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name='queryMessage'>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base='xs:string'>
								<xs:attribute name='type' type='EventType' use='optional' default='Information'/>
								<xs:attribute name='level' type='EventLevel' use='optional' default='Minor'/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name='title'>
					<xs:complexType>
						<xs:attribute name='name' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='status'>
					<xs:complexType>
						<xs:attribute name='message' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='beginSection'>
					<xs:complexType>
						<xs:attribute name='header' type='xs:string' use='required'/>
					</xs:complexType>
				</xs:element>
				<xs:element name='endSection'>
					<xs:complexType/>
				</xs:element>
			</xs:choice>
			<xs:attributeGroup ref='nodeReference'/>
			<xs:attribute name='queryId' type='xs:string' use='required'/>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='abortNodeQuery'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeReferenceRequest'>
					<xs:attribute name='queryId' type='xs:string' use='required'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='abortNodeQueryResponse'>
		<xs:complexType>
			<xs:attributeGroup ref='responseCode'/>
		</xs:complexType>
	</xs:element>
 
	<xs:element name='abortCommonNodeQuery'>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base='NodeReferencesRequest'>
					<xs:attribute name='queryId' type='xs:string' use='required'/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='abortCommonNodeQueryResponse'>
		<xs:complexType>
			<xs:attributeGroup ref='responseCode'/>
		</xs:complexType>
	</xs:element>
 
	<xs:simpleType name='ResponseCode'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='OK'/>
            <xs:enumeration value='NotFound'/>
            <xs:enumeration value='InsufficientPrivileges'/>
            <xs:enumeration value='Locked'/>
            <xs:enumeration value='NotImplemented'/>
            <xs:enumeration value='FormError'/>
            <xs:enumeration value='OtherError'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:simpleType name='Color'>
        <xs:restriction base='xs:string'>
            <xs:pattern value='^[0-9a-fA-F]{6}$'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:simpleType name='NodeState'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='None'/>
            <xs:enumeration value='Information'/>
            <xs:enumeration value='WarningSigned'/>
            <xs:enumeration value='WarningUnsigned'/>
            <xs:enumeration value='ErrorSigned'/>
            <xs:enumeration value='ErrorUnsigned'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:simpleType name='MessageType'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='Error'/>
            <xs:enumeration value='Warning'/>
            <xs:enumeration value='Information'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:simpleType name='CommandType'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='Simple'/>
            <xs:enumeration value='Parameterized'/>
			<xs:enumeration value='Query'/>
		</xs:restriction>
    </xs:simpleType>
 
	<xs:simpleType name='Alignment'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value='Left'/>
			<xs:enumeration value='Center'/>
			<xs:enumeration value='Right'/>
		</xs:restriction>
	</xs:simpleType>
 
	<xs:simpleType name='EventType'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value='Information'/>
			<xs:enumeration value='Warning'/>
			<xs:enumeration value='Error'/>
			<xs:enumeration value='Exception'/>
		</xs:restriction>
	</xs:simpleType>
 
	<xs:simpleType name='EventLevel'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value='Minor'/>
			<xs:enumeration value='Medium'/>
			<xs:enumeration value='Major'/>
		</xs:restriction>
	</xs:simpleType>
 
	<xs:attributeGroup name='tokens'>
        <xs:attribute name='deviceToken' type='xs:string' use='optional'/>
        <xs:attribute name='serviceToken' type='xs:string' use='optional'/>
        <xs:attribute name='userToken' type='xs:string' use='optional'/>
    </xs:attributeGroup>
 
    <xs:attributeGroup name='sourceReference'>
        <xs:attribute name='sourceId' type='xs:string' use='required'/>
    </xs:attributeGroup>
 
    <xs:attributeGroup name='nodeReference'>
        <xs:attributeGroup ref='sourceReference'/>
        <xs:attribute name='nodeId' type='xs:string' use='required'/>
        <xs:attribute name='cacheType' type='xs:string' use='optional'/>
    </xs:attributeGroup>
 
    <xs:attributeGroup name='parametersAndMessages'>
        <xs:attribute name='parameters' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='messages' type='xs:boolean' use='optional' default='false'/>
    </xs:attributeGroup>
 
    <xs:attributeGroup name='indexReference'>
        <xs:attributeGroup ref='sourceReference'/>
        <xs:attribute name='index' type='xs:string' use='required'/>
        <xs:attribute name='indexValue' type='xs:string' use='required'/>
    </xs:attributeGroup>
 
    <xs:attributeGroup name='responseCode'>
        <xs:attribute name='result' type='ResponseCode' use='required'/>
    </xs:attributeGroup>
 
	<xs:attributeGroup name='eventTypes'>
		<xs:attribute name='nodeAdded' type='xs:boolean' use='optional' default='true'/>
		<xs:attribute name='nodeUpdated' type='xs:boolean' use='optional' default='true'/>
		<xs:attribute name='nodeStatusChanged' type='xs:boolean' use='optional' default='true'/>
		<xs:attribute name='nodeRemoved' type='xs:boolean' use='optional' default='true'/>
		<xs:attribute name='nodeMovedUp' type='xs:boolean' use='optional' default='true'/>
		<xs:attribute name='nodeMovedDown' type='xs:boolean' use='optional' default='true'/>
	</xs:attributeGroup>
 
	<xs:attributeGroup name='databaseReference'>
		<xs:attribute name='databaseId' type='xs:string' use='required'/>
	</xs:attributeGroup>
 
	<xs:attributeGroup name='readoutReference'>
		<xs:attribute name='seqnr' type='xs:int' use='required'/>
	</xs:attributeGroup>
 
	<xs:complexType name='Response'>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
 
    <xs:complexType name='TokenRequest'>
        <xs:attributeGroup ref='tokens'/>
    </xs:complexType>
  
    <xs:complexType name='SourceReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='sourceReference'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='DataSource'>
        <xs:attribute name='sourceId' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
        <xs:attribute name='hasChildren' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='lastChanged' type='xs:dateTime' use='optional'/>
    </xs:complexType>
  
    <xs:complexType name='DataSourceArrayResponse'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='dataSource' type='DataSource'/>
        </xs:sequence>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
  
    <xs:complexType name='NodeReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='nodeReference'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='NodeReference'>
        <xs:attributeGroup ref='nodeReference'/>
    </xs:complexType>
  
    <xs:complexType name='NodeReferencesRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='node' type='NodeReference'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='NodeReferenceParametersRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attributeGroup ref='parametersAndMessages'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='SourceReferenceParametersRequest'>
        <xs:complexContent>
            <xs:extension base='SourceReferenceRequest'>
                <xs:attributeGroup ref='parametersAndMessages'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='GetAllNodesRequest'>
        <xs:complexContent>
            <xs:extension base='SourceReferenceParametersRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='onlyIfDerivedFrom' type='xs:string'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='GetChildNodesRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceParametersRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='sortOrder' type='SortOrder'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='SortOrder'>
        <xs:attribute name='parameterName' type='xs:string' use='required'/>
        <xs:attribute name='ascending' type='xs:boolean' use='optional' default='true'/>
    </xs:complexType>
 
    <xs:complexType name='NodeInformation'>
        <xs:choice minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='boolean' type='BooleanParameter'/>
            <xs:element name='color' type='ColorParameter'/>
            <xs:element name='dateTime' type='DateTimeParameter'/>
            <xs:element name='double' type='DoubleParameter'/>
            <xs:element name='duration' type='DurationParameter'/>
            <xs:element name='int' type='IntParameter'/>
            <xs:element name='long' type='LongParameter'/>
            <xs:element name='string' type='StringParameter'/>
            <xs:element name='time' type='TimeParameter'/>
            <xs:element name='message' type='Message'/>
        </xs:choice>
        <xs:attribute name='nodeId' type='xs:string' use='required'/>
        <xs:attribute name='displayName' type='xs:string' use='optional'/>
        <xs:attribute name='nodeType' type='xs:string' use='optional'/>
        <xs:attribute name='localId' type='xs:string' use='optional'/>
        <xs:attribute name='logId' type='xs:string' use='optional'/>
        <xs:attribute name='cacheType' type='xs:string' use='optional'/>
        <xs:attribute name='state' type='NodeState' use='required'/>
		<xs:attribute name='hasChildren' type='xs:boolean' use='required'/>
		<xs:attribute name='childrenOrdered' type='xs:boolean' use='optional' default='false'/>
		<xs:attribute name='isReadable' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='isControllable' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='hasCommands' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='parentId' type='xs:string' use='optional'/>
        <xs:attribute name='parentCacheType' type='xs:string' use='optional'/>
        <xs:attribute name='lastChanged' type='xs:dateTime' use='optional'/>
    </xs:complexType>
 
	<xs:complexType name='NodeSourceInformation'>
		<xs:complexContent>
			<xs:extension base='NodeInformation'>
				<xs:attributeGroup ref='sourceReference'/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
 
	<xs:complexType name='Parameter' abstract='true'>
        <xs:attribute name='id' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
    </xs:complexType>
  
    <xs:complexType name='BooleanParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:boolean' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='ColorParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='Color' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='DateTimeParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:dateTime' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='DoubleParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:double' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='DurationParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:duration' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='IntParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:int' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='LongParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:long' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='StringParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='TimeParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:time' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='Message'>
        <xs:simpleContent>
            <xs:extension base='xs:string'>
                <xs:attribute name='timestamp' type='xs:dateTime' use='required'/>
                <xs:attribute name='type' type='MessageType' use='required'/>
                <xs:attribute name='eventId' type='xs:string' use='optional'/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
 
    <xs:complexType name='NodeInformationArrayResponse'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='node' type='NodeInformation'/>
        </xs:sequence>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
 
    <xs:complexType name='StringArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='value' type='xs:string'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:complexType name='StringArrayResponse'>
        <xs:complexContent>
            <xs:extension base='StringArray'>
                <xs:attributeGroup ref='responseCode'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='BooleanArrayResponse'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='value' type='xs:boolean'/>
        </xs:sequence>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
  
    <xs:complexType name='IndexReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='indexReference'/>
                <xs:attributeGroup ref='parametersAndMessages'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='IndexReference'>
        <xs:attributeGroup ref='indexReference'/>
    </xs:complexType>
  
    <xs:complexType name='IndexReferencesRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='indexRef' type='IndexReference'/>
                </xs:sequence>
                <xs:attributeGroup ref='parametersAndMessages'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='SetNodeParametersResponse'>
        <xs:choice minOccurs='1' maxOccurs='1'>
            <xs:element name='error' type='ParameterError' minOccurs='1' maxOccurs='unbounded'/>
            <xs:element name='node' type='NodeInformation' minOccurs='1' maxOccurs='unbounded'/>
        </xs:choice>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
 
    <xs:complexType name='ParameterFormResponse'>
        <xs:sequence>
			<xs:element ref='xd:x' minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attributeGroup ref="responseCode"/>
    </xs:complexType>
  
    <xs:complexType name='NodeTypeReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attribute name='type' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
  
    <xs:complexType name='Command'>
        <xs:attribute name='command' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
        <xs:attribute name='type' type='CommandType' use='required'/>
        <xs:attribute name='sortCategory' type='xs:string' use='optional'/>
        <xs:attribute name='sortKey' type='xs:string' use='optional'/>
        <xs:attribute name='confirmationString' type='xs:string' use='optional'/>
        <xs:attribute name='failureString' type='xs:string' use='optional'/>
        <xs:attribute name='successString' type='xs:string' use='optional'/>
    </xs:complexType>
  
    <xs:complexType name='CommandArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='command' type='Command'/>
        </xs:sequence>
    </xs:complexType>
  
    <xs:complexType name='NodeCommandReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attribute name='command' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='ExecuteNodeCommandResponse'>
        <xs:choice minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='error' type='ParameterError'/>
        </xs:choice>
        <xs:attributeGroup ref='responseCode'/>
    </xs:complexType>
 
	<xs:complexType name='ExecuteCommonNodeCommandResponse'>
		<xs:complexContent>
			<xs:extension base='ExecuteNodeCommandResponse'>
				<xs:choice minOccurs='0' maxOccurs='unbounded'>
					<xs:element name='result'>
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base='xs:boolean'>
									<xs:attribute name='error' type='xs:string' use='optional'/>
								</xs:extension>
							</xs:simpleContent>	
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
 
	<xs:complexType name='ParameterError'>
        <xs:simpleContent>
            <xs:extension base='xs:string'>
                <xs:attribute name='var' type='xs:string' use='required'/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
 
	<xs:complexType name='ReadoutReference'>
		<xs:attributeGroup ref='databaseReference'/>
		<xs:attributeGroup ref='readoutReference'/>
	</xs:complexType>
 
	<xs:complexType name='DatabaseReferenceRequest'>
		<xs:complexContent>
			<xs:extension base='TokenRequest'>
				<xs:attributeGroup ref='databaseReference'/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
 
</xs:schema>