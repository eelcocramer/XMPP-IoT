<?xml version='1.0' encoding='UTF-8'?>
<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:sn:concentrators'
    xmlns='urn:xmpp:sn:concentrators'
    xmlns:sn='urn:xmpp:sn'
    xmlns:xd="jabber:x:data"
    xmlns:xdv="http://jabber.org/protocol/xdata-validate"
    xmlns:xdl="http://jabber.org/protocol/xdata-layout"
    elementFormDefault='qualified'>
 
    <xs:import namespace='urn:xmpp:sn'/>
    <xs:import namespace='jabber:x:data'/>
    <xs:import namespace='http://jabber.org/protocol/xdata-validate'/>
    <xs:import namespace='http://jabber.org/protocol/xdata-layout'/>
 
    <xs:element name='getCapabilities' type='TokenRequest'/>
    <xs:element name='getCapabilitiesResponse' type='StringArray'/>
 
    <xs:element name='getAllDataSources' type='TokenRequest'/>
    <xs:element name='getAllDataSourcesResponse' type='DataSourceArray'/>
 
    <xs:element name='getTopDataSources' type='TokenRequest'/>
    <xs:element name='getTopDataSourcesResponse' type='DataSourceArray'/>
 
    <xs:element name='getChildDataSources' type='SourceReferenceRequest'/>
    <xs:element name='getChildDataSourcesResponse' type='DataSourceArray'/>
 
    <xs:complexType name='TokenRequest'>
        <xs:attributeGroup ref='tokens'/>
    </xs:complexType>
 
    <xs:attributeGroup name='tokens'>
        <xs:attribute name='deviceToken' type='xs:string' use='optional'/>
        <xs:attribute name='serviceToken' type='xs:string' use='optional'/>
        <xs:attribute name='userToken' type='xs:string' use='optional'/>
    </xs:attributeGroup>
 
    <xs:complexType name='SourceReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='sourceReference'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:attributeGroup name='sourceReference'>
        <xs:attribute name='sourceId' type='xs:string' use='required'/>
    </xs:attributeGroup>
 
    <xs:complexType name='DataSource'>
        <xs:attribute name='id' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
        <xs:attribute name='hasChildren' type='xs:boolean' use='optional' default='false'/>
    </xs:complexType>
 
    <xs:complexType name='DataSourceArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='dataSource' type='DataSource'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:element name='containsNode' type='NodeReferenceRequest'/>
    <xs:element name='containsNodeResponse' type='xs:boolean'/>
 
    <xs:element name='containsNodes' type='NodeReferencesRequest'/>
    <xs:element name='containsNodesResponse' type='BooleanArray'/>
 
    <xs:complexType name='NodeReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='nodeReference'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='NodeReference'>
        <xs:attributeGroup ref='nodeReference'/>
    </xs:complexType>
 
    <xs:complexType name='NodeReferencesRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='node' type='NodeReference'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:attributeGroup name='nodeReference'>
        <xs:attributeGroup ref='sourceReference'/>
        <xs:attribute name='nodeId' type='xs:string' use='required'/>
        <xs:attribute name='cacheType' type='xs:string' use='optional'/>
    </xs:attributeGroup>
 
    <xs:element name='getNode' type='NodeReferenceParametersRequest'/>
    <xs:element name='getNodeResponse' type='NodeInformation'/>
 
    <xs:element name='getNodes' type='NodeReferenceParametersRequest'/>
    <xs:element name='getNodesResponse' type='NodeInformationArray'/>
  
    <xs:element name='getAllNodes' type='NodeReferenceParametersRequest'/>
    <xs:element name='getAllNodesResponse' type='NodeInformationArray'/>
 
    <xs:element name='getRootNodes' type='NodeReferenceParametersRequest'/>
    <xs:element name='getRootNodesResponse' type='NodeInformationArray'/>
 
    <xs:element name='getChildNodes' type='NodeReferenceParametersRequest'/>
    <xs:element name='getChildNodesResponse' type='NodeInformationArray'/>
 
    <xs:complexType name='NodeReferenceParametersRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attribute name='parameters' type='xs:boolean' use='optional' default='false'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='GetAllNodesRequest'>
        <xs:complexContent>
            <xs:extension base='SourceReferenceRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='onlyIfDerivedFrom' type='xs:string'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='GetChildNodesRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='sortOrder' type='SortOrder'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='SortOrder'>
        <xs:attribute name='parameterName' type='xs:string' use='required'/>
        <xs:attribute name='ascending' type='xs:boolean' use='optional' default='true'/>
    </xs:complexType>
 
    <xs:complexType name='NodeInformation'>
        <xs:choice minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='boolean' type='BooleanParameter'/>
            <xs:element name='color' type='ColorParameter'/>
            <xs:element name='dateTime' type='DateTimeParameter'/>
            <xs:element name='double' type='DoubleParameter'/>
            <xs:element name='duration' type='DurationParameter'/>
            <xs:element name='int' type='IntParameter'/>
            <xs:element name='long' type='LongParameter'/>
            <xs:element name='string' type='StringParameter'/>
            <xs:element name='time' type='TimeParameter'/>
        </xs:choice>
        <xs:attribute name='id' type='xs:string' use='required'/>
        <xs:attribute name='displayName' type='xs:string' use='optional'/>
        <xs:attribute name='localId' type='xs:string' use='optional'/>
        <xs:attribute name='logId' type='xs:string' use='optional'/>
        <xs:attribute name='cacheType' type='xs:string' use='required'/>
        <xs:attribute name='state' type='NodeState' use='required'/>
        <xs:attribute name='hasChildren' type='xs:boolean' use='required'/>
        <xs:attribute name='isReadable' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='isConfigurable' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='hasCommands' type='xs:boolean' use='optional' default='false'/>
        <xs:attribute name='parentId' type='xs:string' use='optional'/>
        <xs:attribute name='parentCacheType' type='xs:string' use='optional'/>
    </xs:complexType>
 
    <xs:complexType name='Parameter' abstract='true'>
        <xs:attribute name='id' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
    </xs:complexType>
 
    <xs:complexType name='BooleanParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:boolean' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='ColorParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='Color' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:simpleType name='Color'>
        <xs:restriction base='xs:string'>
            <xs:pattern value='^[0-9a-fA-F]{6}$'/>
        </xs:restriction>    
    </xs:simpleType>
 
    <xs:complexType name='DateTimeParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:dateTime' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='DoubleParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:double' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='DurationParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:duration' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='IntParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:int' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='LongParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:long' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='StringParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='TimeParameter'>
        <xs:complexContent>
            <xs:extension base='Parameter'>
                <xs:attribute name='value' type='xs:time' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='NodeInformationArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='node' type='NodeInformation'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:simpleType name='NodeState'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='None'/>
            <xs:enumeration value='Information'/>
            <xs:enumeration value='WarningSigned'/>
            <xs:enumeration value='WarningUnsigned'/>
            <xs:enumeration value='ErrorSigned'/>
            <xs:enumeration value='ErrorUnsigned'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:element name='getIndices' type='SourceReferenceRequest'/>
    <xs:element name='getIndicesResponse' type='StringArray'/>
 
    <xs:complexType name='StringArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='value' type='xs:string'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:complexType name='BooleanArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='value' type='xs:boolean'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:element name='getNodeFromIndex' type='IndexReferenceRequest'/>
    <xs:element name='getNodeFromIndexResponse' type='NodeInformation'/>
 
    <xs:element name='getNodesFromIndex' type='IndexReferencesRequest'/>
    <xs:element name='getNodesFromIndexResponse' type='NodeInformationArray'/>
 
    <xs:complexType name='IndexReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:attributeGroup ref='indexReference'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name='IndexReference'>
        <xs:attributeGroup ref='indexReference'/>
    </xs:complexType>
 
    <xs:complexType name='IndexReferencesRequest'>
        <xs:complexContent>
            <xs:extension base='TokenRequest'>
                <xs:sequence minOccurs='0' maxOccurs='unbounded'>
                    <xs:element name='indexRef' type='IndexReference'/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:attributeGroup name='indexReference'>
        <xs:attributeGroup ref='sourceReference'/>
        <xs:attribute name='index' type='xs:string' use='required'/>
        <xs:attribute name='indexValue' type='xs:string' use='required'/>
    </xs:attributeGroup>
 
    <xs:element name='getAllNodesFromIndex' type='IndexReferenceRequest'/>
    <xs:element name='getAllNodesFromIndexResponse' type='NodeInformationArray'/>
 
    <xs:element name='getNodeParameters' type='NodeReferenceRequest'/>
    <xs:element name='getNodeParametersResponse' type='ParameterForm'/>
 
    <xs:element name='getCommonNodeParameters' type='NodeReferencesRequest'/>
    <xs:element name='getCommonNodeParametersResponse' type='ParameterForm'/>
 
    <xs:complexType name='ParameterForm'>
        <xs:sequence>
            <xs:any minOccurs="1" maxOccurs="1" namespace="jabber:x:data"/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:element name='getNodeStatus' type='NodeReferenceRequest'/>
    <xs:element name='getNodeStatusResponse' type='MessageArray'/>
 
    <xs:complexType name='Message'>
        <xs:simpleContent>
            <xs:extension base='xs:string'>
                <xs:attribute name='timestamp' type='xs:dateTime' use='required'/>
                <xs:attribute name='type' type='MessageType' use='required'/>
                <xs:attribute name='id' type='xs:string' use='optional'/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
 
    <xs:complexType name='MessageArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='message' type='Message'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:simpleType name='MessageType'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='Error'/>
            <xs:enumeration value='Warning'/>
            <xs:enumeration value='Information'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:element name='getAddableNodeTypes' type='NodeReferenceRequest'/>
    <xs:element name='getAddableNodeTypesResponse' type='StringArray'/>
    <!-- & Displayable type names -->
 
    <xs:element name='getParametersForNewNode' type='NodeTypeReferenceRequest'/>
    <xs:element name='getParametersForNewNodeResponse' type='ParameterForm'/>
 
    <xs:complexType name='NodeTypeReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attribute name='type' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:element name='createNewNode' type='NodeTypeReferenceRequest'/>
    <xs:element name='createNewNodeResponse' type='NodeInformation'/>
 
    <xs:element name='destroyNode' type='NodeReferenceRequest'/>
    <xs:element name='destroyNodeResponse' type='EmptyResponse'/>
 
    <xs:complexType name='EmptyResponse'/>
 
    <xs:element name='getAncestors' type='NodeReferenceRequest'/>
    <xs:element name='getAncestorsResponse' type='NodeInformationArray'/>
 
    <xs:element name='getNodeCommands' type='NodeReferenceRequest'/>
    <xs:element name='getNodeCommandsResponse' type='CommandArray'/>
 
    <xs:element name='getCommonNodeCommands' type='NodeReferencesRequest'/>
    <xs:element name='getCommonNodeCommandsResponse' type='CommandArray'/>
 
    <xs:complexType name='Command'>
        <xs:attribute name='id' type='xs:string' use='required'/>
        <xs:attribute name='name' type='xs:string' use='required'/>
        <xs:attribute name='type' type='CommandType' use='required'/>
        <xs:attribute name='sortCategory' type='xs:string' use='optional'/>
        <xs:attribute name='sortKey' type='xs:string' use='optional'/>
        <xs:attribute name='confirmationString' type='xs:string' use='optional'/>
        <xs:attribute name='failureString' type='xs:string' use='optional'/>
        <xs:attribute name='successString' type='xs:string' use='optional'/>
    </xs:complexType>
 
    <xs:complexType name='CommandArray'>
        <xs:sequence minOccurs='0' maxOccurs='unbounded'>
            <xs:element name='message' type='Command'/>
        </xs:sequence>
    </xs:complexType>
 
    <xs:simpleType name='CommandType'>
        <xs:restriction base='xs:string'>
            <xs:enumeration value='Simple'/>
            <xs:enumeration value='Parametrized'/>
        </xs:restriction>
    </xs:simpleType>
 
    <xs:complexType name='NodeCommandReferenceRequest'>
        <xs:complexContent>
            <xs:extension base='NodeReferenceRequest'>
                <xs:attribute name='command' type='xs:string' use='required'/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:element name='getCommandParameters' type='NodeCommandReferenceRequest'/>
    <xs:element name='getCommandParametersResponse' type='ParameterForm'/>
 
    <xs:element name='getCommonCommandParameters'>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base='NodeReferencesRequest'>
                    <xs:attribute name='command' type='xs:string' use='required'/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name='getCommonCommandParametersResponse' type='ParameterForm'/>
 
    <xs:element name='moveUp' type='NodeReferenceRequest'/>
    <xs:element name='moveUpResponse' type='EmptyResponse'/>
 
    <xs:element name='moveDown' type='NodeReferenceRequest'/>
    <xs:element name='moveDownResponse' type='EmptyResponse'/>
 
</xs:schema>